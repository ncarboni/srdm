language: python
branches: main
services:
- docker
before_install:
- docker pull minlag/mermaid-cli
install:
- pip install markdown
- pip install pymdown-extensions
- pip install mkdocs
- pip install mkdocs-material
- pip install airscraper
- pip install rdflib
- pip install rdflib-jsonld
- pip install mkdocs-tooltipster-links-plugin
- pip install csvkit
- pip install requests
- pip install beautifulsoup4
- pip install mkdocs-macros-plugin
- pip install mkdocs-git-revision-date-localized-plugin
- pip install mkdocs-table-reader-plugin
- git clone https://github.com/g-provost/lightgallery-markdown.git
- cd lightgallery-markdown
- python setup.py install
- cd ..
script:
- git clean -f -d -x
- git clone https://github.com/chin-rcip/CRITERIA.git docs/et/CRITERIA
- git clone https://github.com/banditelol/airscraper.git docs/et/airscraper/airscraper
- cd docs/et/artworkCSV
- bash artwork.sh
- cd ../biblioCSV
- bash biblio.sh
- cd ../builtWorkCSV
- bash built_work.sh
- cd ../doCSV
- bash do.sh
- cd ../eventCSV
- bash event.sh
- cd ../groupCSV
- bash group.sh
- cd ../personCSV
- bash person.sh
- cd ../placeCSV
- bash place.sh
- cd ../../../

after_script:
- git config user.name "Nicola Carboni"
- git config user.email "nicola@carboni.me"
- git remote add gh-token "https://${GITHUB_TOKEN}@github.com/ncarboni/srdm.git";
- git fetch gh-token && git fetch gh-token gh-pages:gh-pages;
- mkdocs gh-deploy -v --clean --remote-name gh-token;

#deploy:
#  provider: pages
#  github_token: "$GITHUB_TOKEN"
#  keep_history: true
#  target_branch: gh-pages
#  on:
#    branch: main
env:
  global:
    secure: H8EOEY8ikBfnkgQNHQGN0wIMTbO6yUpDf+YE6sXI/PykJpjNL8t/h+1c/uUc6TnfoFO5uFrE+Ff19AF797fBGdCAcT+QRLAYyQk4gmYBdJlfguhZ1mQmQg21Gf0NIWq/9SkYKAd2zKyWFLyMjAx0W+EWON/Qn6VKPCcYAbEydovH2+8HEqah6hJrnWqTuMLiQT/h3+NOMiWE+MX3mhW1qt1OMtLMJa83qMENUjcDmL7vzwHrm34pSdukfe1GV8554OBeNhuK/vDaSgpCj/OgOQQlNF1CmWwcYflrsyEcDk21UqrUI6YUZAwH7CPaq2I/76S7gNHD7xyOWZQMcDalrH4LmsRz3rh5aqsHeDRZ9fiIHtvOpwnpvQnvetK7zGkSK11v7SPvqItZHUIf3BFOahlj2Bbh/8Zvrs2UPyREN3pSFl6G6RKYDV37H5ryKH/jvaDhOvT95S5fEoW/fNurW2JmXSh+u6z00x79euNIA06aJfkfsaLjXd6xNKiuxOOzTU6jLKxf9/fvlyQcAux48BR2zqpmKakf2hr1uCgJaaC1nYyvvUeVbIJsxeFKButOXSzu0DWxvgLgw4zlmwTM9I5nNkFMpDAK2T+nyrsNNeekIn4NKxecZD1WlF0AVraITkE738cBmAVLeb/iZX1PtaAmCGqHGmp9/afrZpHkrHw=
